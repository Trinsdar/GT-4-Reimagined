import xyz.wagyourtail.unimined.expect.task.ExpectPlatformJar

plugins {
    id "fabric-loom"
    id 'xyz.wagyourtail.unimined.expect-platform' version '1.0.5'
}
archivesBaseName = "${project.archive_base_name}-fabric"

def accessWidenerFile = project(":antimatter-common").file("src/main/resources/antimatter.accesswidener")

loom {
    accessWidenerPath = accessWidenerFile
    mixin {
        defaultRefmapName = "gt4r.refmap.json"
    }
}

repositories {
    maven {
        url = uri("https://storage.googleapis.com/devan-maven/")
    }
}

dependencies{
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.mappings_version}@zip")
    }
    implementation(expectPlatform.annotationsDep)
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    implementation(project(path: ":tesseract-common")) { transitive false }
    implementation(project(path: ":tesseract-fabric")) { transitive false }
    implementation(project(path: ":antimatter-common")) { transitive false }
    implementation(project(path: ":antimatter-fabric")) { transitive false }
    compileOnly(project(":common"))
    modImplementation("io.github.fabricators_of_create:Porting-Lib:${rootProject.port_lib_version}-beta+1.18.2-stable"){
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "com.github.LlamaLad7")
    }
    modImplementation("net.feltmc:felt-recipe-api:1.0.1"){
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "com.terraformersmc")
    }
    modImplementation("net.feltmc:felt-player-item-api:1.1.0"){
        exclude(group: "net.fabricmc.fabric-api")
        exclude(group: "com.terraformersmc")
    }
    modImplementation("net.feltmc:felt-enchanting-api:1.1.0") { transitive false }
    modImplementation("dev.trinsdar:arrp:0.6.7")
    modImplementation("org.gt-reimagined:structurelib-fabric:${project.structurelib_version}-${project.minecraft_version}")
    modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${rootProject.rei_version}"
    modCompileOnly("mezz.jei:jei-${rootProject.minecraft_version}-fabric:${rootProject.jei_version}"){
        exclude(group: "mezz.jei", module: "jei-1.18.2-fabric-api")
    }
    modImplementation("teamreborn:energy:${rootProject.energy_version}") {
        transitive = false
    }
    modRuntimeOnly("com.terraformersmc:modmenu:${rootProject.mod_menu_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation "maven.modrinth:carbon-config:${project.carbon_config_fabric_version}"
    modImplementation("earth.terrarium:botarium-fabric-1.18.2:${project.botarium_version}"){
        transitive = false
    }
    modImplementation("com.teamresourceful.resourcefullib:resourcefullib-fabric-1.18.2:${project.resourcefullib_version}")
    modRuntimeOnly("dev.latvian.mods:kubejs-fabric:${project.kubejs_version}")


    modImplementation(include("org.gt-reimagined:gtcore-fabric:${rootProject.gt_core_version}-${rootProject.minecraft_version}")){
        transitive = false
    }
    modImplementation("com.terraformersmc.terraform-api:terraform-wood-api-v1:3.1.0")
    modRuntimeOnly("curse.maven:energizedpower-782147:4567261")
}

processResources {
    from project(":common").sourceSets.main.resources
    exclude('gtuassets1.14')

    def toReplace = [
            "version"             : project.mod_version
    ]

    inputs.properties toReplace
    filesMatching("fabric.mod.json") {
        expand toReplace
    }
}

tasks.named('compileJava', JavaCompile) {
    source(project(":common").sourceSets.main.allSource)
}

sourcesJar {
    from(project(':common').sourceSets.main.allSource)
}

tasks.create("platformJar", ExpectPlatformJar){
    platformName = "fabric"
    inputFiles = sourceSets.main.output
    archiveClassifier.set "dev"
    remap = [
            "xyz/wagyourtail/unimined/expect/annotation/Environment": "net/fabricmc/api/Environment",
            "xyz/wagyourtail/unimined/expect/annotation/Environment\$EnvType": "net/fabricmc/api/EnvType",
    ]
}

remapJar {
    inputFile.set platformJar.archiveFile
    dependsOn platformJar
    archiveClassifier.set null
}

jar{
    archiveClassifier.set "dev-unmapped"
}
